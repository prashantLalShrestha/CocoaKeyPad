// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 51;
	objects = {

/* Begin PBXBuildFile section */
		40A5D18124F757F1F0B8EC29 /* Pods_CocoaKeyPad_CocoaKeyPadTests.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = E28F4D84F33CE29F3146AFD6 /* Pods_CocoaKeyPad_CocoaKeyPadTests.framework */; };
		8F86DB772475133000BE8F10 /* CocoaKeyPad.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 8F86DB6D2475132F00BE8F10 /* CocoaKeyPad.framework */; };
		8F86DB7C2475133000BE8F10 /* CocoaKeyPadTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = 8F86DB7B2475133000BE8F10 /* CocoaKeyPadTests.swift */; };
		8F86DB7E2475133000BE8F10 /* CocoaKeyPad.h in Headers */ = {isa = PBXBuildFile; fileRef = 8F86DB702475132F00BE8F10 /* CocoaKeyPad.h */; settings = {ATTRIBUTES = (Public, ); }; };
		8F86DB8B247513B600BE8F10 /* KeyboardConfig.swift in Sources */ = {isa = PBXBuildFile; fileRef = 8F86DB88247513B600BE8F10 /* KeyboardConfig.swift */; };
		8F86DB8C247513B600BE8F10 /* KeypadView.swift in Sources */ = {isa = PBXBuildFile; fileRef = 8F86DB89247513B600BE8F10 /* KeypadView.swift */; };
		8F86DB8D247513B600BE8F10 /* KeyboardAsset.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 8F86DB8A247513B600BE8F10 /* KeyboardAsset.xcassets */; };
		8F86DB9024751E8900BE8F10 /* UIColor+Ext.swift in Sources */ = {isa = PBXBuildFile; fileRef = 8F86DB8F24751E8900BE8F10 /* UIColor+Ext.swift */; };
		8F86DB9324751F6B00BE8F10 /* UITextField+KeyPad.swift in Sources */ = {isa = PBXBuildFile; fileRef = 8F86DB9224751F6B00BE8F10 /* UITextField+KeyPad.swift */; };
		8F86DB952475206D00BE8F10 /* KeyPadDelegate.swift in Sources */ = {isa = PBXBuildFile; fileRef = 8F86DB942475206D00BE8F10 /* KeyPadDelegate.swift */; };
		8F86DB97247525C900BE8F10 /* UIImage+Ext.swift in Sources */ = {isa = PBXBuildFile; fileRef = 8F86DB96247525C900BE8F10 /* UIImage+Ext.swift */; };
		BB6D0B51BA4AA358F1352721 /* Pods_CocoaKeyPad.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 9C064C265F4E669AD6D2D6BF /* Pods_CocoaKeyPad.framework */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		8F86DB782475133000BE8F10 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 8F86DB642475132F00BE8F10 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 8F86DB6C2475132F00BE8F10;
			remoteInfo = CocoaKeyPad;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		12711C3B99D0004359C7D7DD /* Pods-CocoaKeyPad.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-CocoaKeyPad.debug.xcconfig"; path = "Target Support Files/Pods-CocoaKeyPad/Pods-CocoaKeyPad.debug.xcconfig"; sourceTree = "<group>"; };
		2E73E75C06AA3E181EF1FC35 /* Pods-CocoaKeyPad.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-CocoaKeyPad.release.xcconfig"; path = "Target Support Files/Pods-CocoaKeyPad/Pods-CocoaKeyPad.release.xcconfig"; sourceTree = "<group>"; };
		86FDFA86B849CC99D32366CC /* Pods-CocoaKeyPad-CocoaKeyPadTests.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-CocoaKeyPad-CocoaKeyPadTests.debug.xcconfig"; path = "Target Support Files/Pods-CocoaKeyPad-CocoaKeyPadTests/Pods-CocoaKeyPad-CocoaKeyPadTests.debug.xcconfig"; sourceTree = "<group>"; };
		8F86DB6D2475132F00BE8F10 /* CocoaKeyPad.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; path = CocoaKeyPad.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		8F86DB702475132F00BE8F10 /* CocoaKeyPad.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = CocoaKeyPad.h; sourceTree = "<group>"; };
		8F86DB712475132F00BE8F10 /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
		8F86DB762475133000BE8F10 /* CocoaKeyPadTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = CocoaKeyPadTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
		8F86DB7B2475133000BE8F10 /* CocoaKeyPadTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CocoaKeyPadTests.swift; sourceTree = "<group>"; };
		8F86DB7D2475133000BE8F10 /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
		8F86DB88247513B600BE8F10 /* KeyboardConfig.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = KeyboardConfig.swift; sourceTree = "<group>"; };
		8F86DB89247513B600BE8F10 /* KeypadView.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = KeypadView.swift; sourceTree = "<group>"; };
		8F86DB8A247513B600BE8F10 /* KeyboardAsset.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; path = KeyboardAsset.xcassets; sourceTree = "<group>"; };
		8F86DB8F24751E8900BE8F10 /* UIColor+Ext.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "UIColor+Ext.swift"; sourceTree = "<group>"; };
		8F86DB9224751F6B00BE8F10 /* UITextField+KeyPad.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "UITextField+KeyPad.swift"; sourceTree = "<group>"; };
		8F86DB942475206D00BE8F10 /* KeyPadDelegate.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = KeyPadDelegate.swift; sourceTree = "<group>"; };
		8F86DB96247525C900BE8F10 /* UIImage+Ext.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "UIImage+Ext.swift"; sourceTree = "<group>"; };
		9C064C265F4E669AD6D2D6BF /* Pods_CocoaKeyPad.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; path = Pods_CocoaKeyPad.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		9FD0CB0A7104123465FC1863 /* Pods-CocoaKeyPad-CocoaKeyPadTests.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-CocoaKeyPad-CocoaKeyPadTests.release.xcconfig"; path = "Target Support Files/Pods-CocoaKeyPad-CocoaKeyPadTests/Pods-CocoaKeyPad-CocoaKeyPadTests.release.xcconfig"; sourceTree = "<group>"; };
		E28F4D84F33CE29F3146AFD6 /* Pods_CocoaKeyPad_CocoaKeyPadTests.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; path = Pods_CocoaKeyPad_CocoaKeyPadTests.framework; sourceTree = BUILT_PRODUCTS_DIR; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		8F86DB6A2475132F00BE8F10 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				BB6D0B51BA4AA358F1352721 /* Pods_CocoaKeyPad.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		8F86DB732475133000BE8F10 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				8F86DB772475133000BE8F10 /* CocoaKeyPad.framework in Frameworks */,
				40A5D18124F757F1F0B8EC29 /* Pods_CocoaKeyPad_CocoaKeyPadTests.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		69A7ECCE2442404BC2D2348C /* Frameworks */ = {
			isa = PBXGroup;
			children = (
				9C064C265F4E669AD6D2D6BF /* Pods_CocoaKeyPad.framework */,
				E28F4D84F33CE29F3146AFD6 /* Pods_CocoaKeyPad_CocoaKeyPadTests.framework */,
			);
			name = Frameworks;
			sourceTree = "<group>";
		};
		8F86DB632475132F00BE8F10 = {
			isa = PBXGroup;
			children = (
				8F86DB6F2475132F00BE8F10 /* CocoaKeyPad */,
				8F86DB7A2475133000BE8F10 /* CocoaKeyPadTests */,
				8F86DB6E2475132F00BE8F10 /* Products */,
				ED1BA9931B88A4A94CE31A29 /* Pods */,
				69A7ECCE2442404BC2D2348C /* Frameworks */,
			);
			sourceTree = "<group>";
		};
		8F86DB6E2475132F00BE8F10 /* Products */ = {
			isa = PBXGroup;
			children = (
				8F86DB6D2475132F00BE8F10 /* CocoaKeyPad.framework */,
				8F86DB762475133000BE8F10 /* CocoaKeyPadTests.xctest */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		8F86DB6F2475132F00BE8F10 /* CocoaKeyPad */ = {
			isa = PBXGroup;
			children = (
				8F86DB872475139100BE8F10 /* Sources */,
				8F86DB702475132F00BE8F10 /* CocoaKeyPad.h */,
				8F86DB712475132F00BE8F10 /* Info.plist */,
			);
			path = CocoaKeyPad;
			sourceTree = "<group>";
		};
		8F86DB7A2475133000BE8F10 /* CocoaKeyPadTests */ = {
			isa = PBXGroup;
			children = (
				8F86DB7B2475133000BE8F10 /* CocoaKeyPadTests.swift */,
				8F86DB7D2475133000BE8F10 /* Info.plist */,
			);
			path = CocoaKeyPadTests;
			sourceTree = "<group>";
		};
		8F86DB872475139100BE8F10 /* Sources */ = {
			isa = PBXGroup;
			children = (
				8F86DB88247513B600BE8F10 /* KeyboardConfig.swift */,
				8F86DB89247513B600BE8F10 /* KeypadView.swift */,
				8F86DB942475206D00BE8F10 /* KeyPadDelegate.swift */,
				8F86DB9124751F5400BE8F10 /* Extensions */,
				8F86DB9C247528DB00BE8F10 /* Resources */,
			);
			path = Sources;
			sourceTree = SOURCE_ROOT;
		};
		8F86DB9124751F5400BE8F10 /* Extensions */ = {
			isa = PBXGroup;
			children = (
				8F86DB8F24751E8900BE8F10 /* UIColor+Ext.swift */,
				8F86DB9224751F6B00BE8F10 /* UITextField+KeyPad.swift */,
				8F86DB96247525C900BE8F10 /* UIImage+Ext.swift */,
			);
			path = Extensions;
			sourceTree = "<group>";
		};
		8F86DB9C247528DB00BE8F10 /* Resources */ = {
			isa = PBXGroup;
			children = (
				8F86DB8A247513B600BE8F10 /* KeyboardAsset.xcassets */,
			);
			path = Resources;
			sourceTree = "<group>";
		};
		ED1BA9931B88A4A94CE31A29 /* Pods */ = {
			isa = PBXGroup;
			children = (
				12711C3B99D0004359C7D7DD /* Pods-CocoaKeyPad.debug.xcconfig */,
				2E73E75C06AA3E181EF1FC35 /* Pods-CocoaKeyPad.release.xcconfig */,
				86FDFA86B849CC99D32366CC /* Pods-CocoaKeyPad-CocoaKeyPadTests.debug.xcconfig */,
				9FD0CB0A7104123465FC1863 /* Pods-CocoaKeyPad-CocoaKeyPadTests.release.xcconfig */,
			);
			path = Pods;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXHeadersBuildPhase section */
		8F86DB682475132F00BE8F10 /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				8F86DB7E2475133000BE8F10 /* CocoaKeyPad.h in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXHeadersBuildPhase section */

/* Begin PBXNativeTarget section */
		8F86DB6C2475132F00BE8F10 /* CocoaKeyPad */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 8F86DB812475133000BE8F10 /* Build configuration list for PBXNativeTarget "CocoaKeyPad" */;
			buildPhases = (
				F8E0BDEDD8CF4C3D706DB52A /* [CP] Check Pods Manifest.lock */,
				8F86DB682475132F00BE8F10 /* Headers */,
				8F86DB692475132F00BE8F10 /* Sources */,
				8F86DB6A2475132F00BE8F10 /* Frameworks */,
				8F86DB6B2475132F00BE8F10 /* Resources */,
				8F86DB8E2475146200BE8F10 /* ShellScript */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = CocoaKeyPad;
			productName = CocoaKeyPad;
			productReference = 8F86DB6D2475132F00BE8F10 /* CocoaKeyPad.framework */;
			productType = "com.apple.product-type.framework";
		};
		8F86DB752475133000BE8F10 /* CocoaKeyPadTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 8F86DB842475133000BE8F10 /* Build configuration list for PBXNativeTarget "CocoaKeyPadTests" */;
			buildPhases = (
				D628FE15C037EF568F4BEF42 /* [CP] Check Pods Manifest.lock */,
				8F86DB722475133000BE8F10 /* Sources */,
				8F86DB732475133000BE8F10 /* Frameworks */,
				8F86DB742475133000BE8F10 /* Resources */,
				9EF87FF35210FB23CEAB4A6F /* [CP] Embed Pods Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				8F86DB792475133000BE8F10 /* PBXTargetDependency */,
			);
			name = CocoaKeyPadTests;
			productName = CocoaKeyPadTests;
			productReference = 8F86DB762475133000BE8F10 /* CocoaKeyPadTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		8F86DB642475132F00BE8F10 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastSwiftUpdateCheck = 1140;
				LastUpgradeCheck = 1140;
				ORGANIZATIONNAME = Inficare;
				TargetAttributes = {
					8F86DB6C2475132F00BE8F10 = {
						CreatedOnToolsVersion = 11.4.1;
						LastSwiftMigration = 1140;
					};
					8F86DB752475133000BE8F10 = {
						CreatedOnToolsVersion = 11.4.1;
					};
				};
			};
			buildConfigurationList = 8F86DB672475132F00BE8F10 /* Build configuration list for PBXProject "CocoaKeyPad" */;
			compatibilityVersion = "Xcode 9.3";
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
				Base,
			);
			mainGroup = 8F86DB632475132F00BE8F10;
			productRefGroup = 8F86DB6E2475132F00BE8F10 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				8F86DB6C2475132F00BE8F10 /* CocoaKeyPad */,
				8F86DB752475133000BE8F10 /* CocoaKeyPadTests */,
			);
		};
/* End PBXProject section */

/* Begin PBXResourcesBuildPhase section */
		8F86DB6B2475132F00BE8F10 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				8F86DB8D247513B600BE8F10 /* KeyboardAsset.xcassets in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		8F86DB742475133000BE8F10 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXResourcesBuildPhase section */

/* Begin PBXShellScriptBuildPhase section */
		8F86DB8E2475146200BE8F10 /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "UNIVERSAL_OUTPUTFOLDER=${BUILD_DIR}/${CONFIGURATION}-universal\n\nif [ \"true\" == ${ALREADYINVOKED:-false} ]\nthen\necho \"RECURSION: Detected, stopping\"\nelse\nexport ALREADYINVOKED=\"true\"\n\n# Step 1. Build Device and Simulator versions\nxcodebuild -target \"${PROJECT_NAME}\" ONLY_ACTIVE_ARCH=NO -configuration ${CONFIGURATION} -sdk iphoneos  BUILD_DIR=\"${BUILD_DIR}\" BUILD_ROOT=\"${BUILD_ROOT}\" clean build\nxcodebuild -target \"${PROJECT_NAME}\" -configuration ${CONFIGURATION} -sdk iphonesimulator ONLY_ACTIVE_ARCH=NO BUILD_DIR=\"${BUILD_DIR}\" BUILD_ROOT=\"${BUILD_ROOT}\" clean build\n\n# Step 2. Copy the framework structure (from iphoneos build) to the universal folder\ncp -R \"${BUILD_DIR}/${CONFIGURATION}-iphoneos/${PROJECT_NAME}.framework\" \"${UNIVERSAL_OUTPUTFOLDER}/\"\n\n# Step 3. Copy Swift modules (from iphonesimulator build) to the copied framework directory\ncp -R \"${BUILD_DIR}/${CONFIGURATION}-iphonesimulator/${PROJECT_NAME}.framework/Modules/${PROJECT_NAME}.swiftmodule/.\" \"${UNIVERSAL_OUTPUTFOLDER}/${PROJECT_NAME}.framework/Modules/${PROJECT_NAME}.swiftmodule\"\n\n# Step 4. Create universal binary file using lipo and place the combined executable in the copied framework directory\nlipo -create -output \"${UNIVERSAL_OUTPUTFOLDER}/${PROJECT_NAME}.framework/${PROJECT_NAME}\" \"${BUILD_DIR}/${CONFIGURATION}-iphonesimulator/${PROJECT_NAME}.framework/${PROJECT_NAME}\" \"${BUILD_DIR}/${CONFIGURATION}-iphoneos/${PROJECT_NAME}.framework/${PROJECT_NAME}\"\n\n# Step 5. Convenience step to copy the framework to the project's directory\n\ncp -R \"${UNIVERSAL_OUTPUTFOLDER}/${PROJECT_NAME}.framework\" \"${PROJECT_DIR}/Products\"\n\n# Step 6. Convenience step to open the project's directory in Finder\nopen \"${PROJECT_DIR}/Products\"\n\nfi\n";
		};
		9EF87FF35210FB23CEAB4A6F /* [CP] Embed Pods Frameworks */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-CocoaKeyPad-CocoaKeyPadTests/Pods-CocoaKeyPad-CocoaKeyPadTests-frameworks-${CONFIGURATION}-input-files.xcfilelist",
			);
			name = "[CP] Embed Pods Frameworks";
			outputFileListPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-CocoaKeyPad-CocoaKeyPadTests/Pods-CocoaKeyPad-CocoaKeyPadTests-frameworks-${CONFIGURATION}-output-files.xcfilelist",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-CocoaKeyPad-CocoaKeyPadTests/Pods-CocoaKeyPad-CocoaKeyPadTests-frameworks.sh\"\n";
			showEnvVarsInLog = 0;
		};
		D628FE15C037EF568F4BEF42 /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-CocoaKeyPad-CocoaKeyPadTests-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		F8E0BDEDD8CF4C3D706DB52A /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-CocoaKeyPad-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		8F86DB692475132F00BE8F10 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				8F86DB9024751E8900BE8F10 /* UIColor+Ext.swift in Sources */,
				8F86DB952475206D00BE8F10 /* KeyPadDelegate.swift in Sources */,
				8F86DB8C247513B600BE8F10 /* KeypadView.swift in Sources */,
				8F86DB97247525C900BE8F10 /* UIImage+Ext.swift in Sources */,
				8F86DB8B247513B600BE8F10 /* KeyboardConfig.swift in Sources */,
				8F86DB9324751F6B00BE8F10 /* UITextField+KeyPad.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		8F86DB722475133000BE8F10 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				8F86DB7C2475133000BE8F10 /* CocoaKeyPadTests.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		8F86DB792475133000BE8F10 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 8F86DB6C2475132F00BE8F10 /* CocoaKeyPad */;
			targetProxy = 8F86DB782475133000BE8F10 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		8F86DB7F2475133000BE8F10 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				BUILD_LIBRARY_FOR_DISTRIBUTION = YES;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				CURRENT_PROJECT_VERSION = 1;
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
				MTL_ENABLE_DEBUG_INFO = INCLUDE_SOURCE;
				MTL_FAST_MATH = YES;
				ONLY_ACTIVE_ARCH = NO;
				SDKROOT = iphoneos;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = DEBUG;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				VERSIONING_SYSTEM = "apple-generic";
				VERSION_INFO_PREFIX = "";
			};
			name = Debug;
		};
		8F86DB802475133000BE8F10 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				BUILD_LIBRARY_FOR_DISTRIBUTION = YES;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				CURRENT_PROJECT_VERSION = 1;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
				MTL_ENABLE_DEBUG_INFO = NO;
				MTL_FAST_MATH = YES;
				ONLY_ACTIVE_ARCH = NO;
				SDKROOT = iphoneos;
				SWIFT_COMPILATION_MODE = wholemodule;
				SWIFT_OPTIMIZATION_LEVEL = "-O";
				VALIDATE_PRODUCT = YES;
				VERSIONING_SYSTEM = "apple-generic";
				VERSION_INFO_PREFIX = "";
			};
			name = Release;
		};
		8F86DB822475133000BE8F10 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 12711C3B99D0004359C7D7DD /* Pods-CocoaKeyPad.debug.xcconfig */;
			buildSettings = {
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_STYLE = Automatic;
				DEFINES_MODULE = YES;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				INFOPLIST_FILE = CocoaKeyPad/Info.plist;
				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
					"@loader_path/Frameworks",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.workspacex.CocoaKeyPad;
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				TARGETED_DEVICE_FAMILY = "1,2";
			};
			name = Debug;
		};
		8F86DB832475133000BE8F10 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 2E73E75C06AA3E181EF1FC35 /* Pods-CocoaKeyPad.release.xcconfig */;
			buildSettings = {
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_STYLE = Automatic;
				DEFINES_MODULE = YES;
				DYLIB_COMPATIBILITY_VERSION = 1;
				DYLIB_CURRENT_VERSION = 1;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				INFOPLIST_FILE = CocoaKeyPad/Info.plist;
				INSTALL_PATH = "$(LOCAL_LIBRARY_DIR)/Frameworks";
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
					"@loader_path/Frameworks",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.workspacex.CocoaKeyPad;
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 5.0;
				TARGETED_DEVICE_FAMILY = "1,2";
			};
			name = Release;
		};
		8F86DB852475133000BE8F10 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 86FDFA86B849CC99D32366CC /* Pods-CocoaKeyPad-CocoaKeyPadTests.debug.xcconfig */;
			buildSettings = {
				ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES = YES;
				CODE_SIGN_STYLE = Automatic;
				INFOPLIST_FILE = CocoaKeyPadTests/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
					"@loader_path/Frameworks",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.workspacex.CocoaKeyPadTests;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 5.0;
				TARGETED_DEVICE_FAMILY = "1,2";
			};
			name = Debug;
		};
		8F86DB862475133000BE8F10 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 9FD0CB0A7104123465FC1863 /* Pods-CocoaKeyPad-CocoaKeyPadTests.release.xcconfig */;
			buildSettings = {
				ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES = YES;
				CODE_SIGN_STYLE = Automatic;
				INFOPLIST_FILE = CocoaKeyPadTests/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
					"@loader_path/Frameworks",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.workspacex.CocoaKeyPadTests;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 5.0;
				TARGETED_DEVICE_FAMILY = "1,2";
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		8F86DB672475132F00BE8F10 /* Build configuration list for PBXProject "CocoaKeyPad" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				8F86DB7F2475133000BE8F10 /* Debug */,
				8F86DB802475133000BE8F10 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		8F86DB812475133000BE8F10 /* Build configuration list for PBXNativeTarget "CocoaKeyPad" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				8F86DB822475133000BE8F10 /* Debug */,
				8F86DB832475133000BE8F10 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		8F86DB842475133000BE8F10 /* Build configuration list for PBXNativeTarget "CocoaKeyPadTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				8F86DB852475133000BE8F10 /* Debug */,
				8F86DB862475133000BE8F10 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = 8F86DB642475132F00BE8F10 /* Project object */;
}
